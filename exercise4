import exercise4

# Create a database and tables
conn = sqlite3.connect('library.db')
cursor = conn.cursor()

cursor.execute('''
    CREATE TABLE IF NOT EXISTS Books (
        BookID INTEGER PRIMARY KEY,
        Title TEXT,
        Author TEXT,
        ISBN TEXT,
        Status TEXT
    )
''')

cursor.execute('''
    CREATE TABLE IF NOT EXISTS Users (
        UserID INTEGER PRIMARY KEY,
        Name TEXT,
        Email TEXT
    )
''')

cursor.execute('''
    CREATE TABLE IF NOT EXISTS Reservations (
        ReservationID INTEGER PRIMARY KEY,
        BookID INTEGER,
        UserID INTEGER,
        ReservationDate TEXT,
        FOREIGN KEY (BookID) REFERENCES Books(BookID),
        FOREIGN KEY (UserID) REFERENCES Users(UserID)
    )
''')

conn.commit()

def add_book(title, author, isbn):
    cursor.execute('INSERT INTO Books (Title, Author, ISBN, Status) VALUES (?, ?, ?, ?)',
                   (title, author, isbn, 'Available'))
    conn.commit()
    print("Book added successfully.")

def find_book_details(book_id):
    cursor.execute('''
        SELECT Books.BookID, Title, Author, ISBN, Status, Name, Email, ReservationDate
        FROM Books
        LEFT JOIN Reservations ON Books.BookID = Reservations.BookID
        LEFT JOIN Users ON Reservations.UserID = Users.UserID
        WHERE Books.BookID = ?
    ''', (book_id,))
    book_details = cursor.fetchone()
    if book_details:
        print("BookID:", book_details[0])
        print("Title:", book_details[1])
        print("Author:", book_details[2])
        print("ISBN:", book_details[3])
        print("Status:", book_details[4])
        if book_details[5] is not None:
            print("Reserved by:", book_details[5])
            print("User Email:", book_details[6])
            print("Reservation Date:", book_details[7])
    else:
        print("Book not found.")

# Implement other CRUD operations similarly

# Close the database connection when done
conn.close()
